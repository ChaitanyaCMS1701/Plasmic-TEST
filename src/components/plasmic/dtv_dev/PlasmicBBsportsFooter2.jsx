// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMuK5QvKwWGrkw9DYJKXqS
// Component: DmzRb63NDqeE
import * as React from "react";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Button from "../../Button"; // plasmic-import: Humveg51WdE0/component
import { useScreenVariants as useScreenVariantscVfb4YQ8QuPw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: CVfb4yQ8quPw/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sMuK5QvKwWGrkw9DYJKXqS/projectcss
import sty from "./PlasmicBBsportsFooter2.module.css"; // plasmic-import: DmzRb63NDqeE/css

createPlasmicElementProxy;

export const PlasmicBBsportsFooter2__VariantProps = new Array();

export const PlasmicBBsportsFooter2__ArgProps = new Array();

const $$ = {};

function PlasmicBBsportsFooter2__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscVfb4YQ8QuPw()
  });
  return (
    <Stack__
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <Button
        className={classNames("__wab_instance", sty.button__o00F6)}
        link={`/new-page`}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__lfVwh
          )}
        >
          {"CONTINUE TO CANCLE THE SUBSCRITION"}
        </div>
      </Button>
      <Button className={classNames("__wab_instance", sty.button__yKxGm)}>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__uua2C
          )}
        >
          {"NEVER MIND,I 'D LIKE TO STAY SUBSCRIBED"}
        </div>
      </Button>
    </Stack__>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBBsportsFooter2__ArgProps,
          internalVariantPropNames: PlasmicBBsportsFooter2__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBBsportsFooter2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBBsportsFooter2";
  } else {
    func.displayName = `PlasmicBBsportsFooter2.${nodeName}`;
  }
  return func;
}

export const PlasmicBBsportsFooter2 = Object.assign(
  // Top-level PlasmicBBsportsFooter2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicBBsportsFooter2
    internalVariantProps: PlasmicBBsportsFooter2__VariantProps,
    internalArgProps: PlasmicBBsportsFooter2__ArgProps
  }
);

export default PlasmicBBsportsFooter2;
/* prettier-ignore-end */
